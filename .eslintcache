[{"E:\\Game\\my-app\\src\\index.js":"1","E:\\Game\\my-app\\src\\App.js":"2","E:\\Game\\my-app\\src\\reportWebVitals.js":"3","E:\\Game\\my-app\\src\\Component\\Main.js":"4","E:\\Game\\my-app\\src\\Component\\CreateMatch.js":"5","E:\\Game\\my-app\\src\\Component\\Ball.js":"6"},{"size":548,"mtime":1610424997488,"results":"7","hashOfConfig":"8"},{"size":519,"mtime":1610428809599,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":956,"mtime":1610426461179,"results":"11","hashOfConfig":"8"},{"size":7465,"mtime":1610455129706,"results":"12","hashOfConfig":"8"},{"size":5445,"mtime":1610429217055,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ffkocn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"E:\\Game\\my-app\\src\\index.js",[],["29","30"],"E:\\Game\\my-app\\src\\App.js",[],"E:\\Game\\my-app\\src\\reportWebVitals.js",[],"E:\\Game\\my-app\\src\\Component\\Main.js",["31"],"import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <>\r\n      <div className=\"col-md-8 mx-auto mt-2\">\r\n        <Card className=\"text-center\">\r\n          <Card.Header>Match Details</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {\" \"}\r\n              <Link to={\"/createMatch\"}>Create Match </Link>{\" \"}\r\n            </Card.Title>\r\n            <Card.Title>MatchId</Card.Title>\r\n            <Card.Title>Match Location</Card.Title>\r\n            <Card.Title>Match Name</Card.Title>\r\n            <Card.Title>Team Name1</Card.Title>\r\n            <Card.Title>Team Name2</Card.Title>\r\n            <Card.Title>Match Type</Card.Title>\r\n          </Card.Body>\r\n          <Card.Footer className=\"text-muted\"></Card.Footer>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","E:\\Game\\my-app\\src\\Component\\CreateMatch.js",[],"E:\\Game\\my-app\\src\\Component\\Ball.js",["32"],"import React, { useState } from \"react\";\r\n//import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nconst Ball = () => {\r\n  let [score, setScore] = useState(0);\r\n  let [ball, setBall] = useState(6);\r\n  let [lastClicked, setLastClicked] = useState([]);\r\n\r\n  const clickHandler = (e) => {\r\n    if (ball === 0) {\r\n      alert(\"Over is ended\");\r\n      return;\r\n    }\r\n    ball--;\r\n    let value = parseInt(e.target.value);\r\n    //setLastClicked(value)\r\n    setScore(score + value);\r\n    setBall(ball);\r\n    setLastClicked((preValue) => {\r\n      return [...preValue, value];\r\n    });\r\n    //console.log(ball)\r\n  };\r\n  const redoHandler = (e) => {};\r\n  const undoHandler = () => {\r\n    let countBall = parseInt(ball);\r\n    let getScore = parseInt(score);\r\n    //console.log(countBall,getScore,lastClicked)\r\n    //setBall(parseInt(countBall) + 1);\r\n    //setScore(getScore-lastClicked.pop() );\r\n    console.log(lastClicked);\r\n    //console.log(lastClicked.pop());\r\n    let lastValue = lastClicked.pop();\r\n    console.log(lastValue);\r\n    setScore(getScore - lastValue);\r\n    //console.log(countBall,getScore,lastClicked)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-md-5 mt-3 mx-auto\">\r\n        <div className=\"input-group mb-3\">\r\n          <input type=\"text\" className=\"form-control\" value={score} readOnly />\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">BallLeft</span>\r\n            <span className=\"input-group-text\">{ball}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"table\">\r\n          <tbody>\r\n            <tr></tr>\r\n            <tr>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info p-2\"\r\n                  value=\"1\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  1\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info\"\r\n                  value=\"2\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  2\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info\"\r\n                  value=\"3\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  3\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success\"\r\n                  value=\"4\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  4\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  value=\"6\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  6\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  value=\"\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  out\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info\"\r\n                  value=\"1\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  wide\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info\"\r\n                  value=\"1\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  no ball\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info\"\r\n                  value=\"\"\r\n                  onClick={(e) => {\r\n                    redoHandler(e);\r\n                  }}\r\n                >\r\n                  Redo\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info\"\r\n                  value=\"\"\r\n                  onClick={() => {\r\n                    undoHandler();\r\n                  }}\r\n                >\r\n                  Undo\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            {ball ? null :\r\n              <tr className=\"text-center\">\r\n                <td>\r\n                  <button type=\"button\" className=\"btn btn-info\" value=\"\">\r\n                    Submit\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Ball;\r\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":3,"column":8,"nodeType":"39","messageId":"40","endLine":3,"endColumn":14},{"ruleId":"37","severity":1,"message":"41","line":27,"column":9,"nodeType":"39","messageId":"40","endLine":27,"endColumn":18},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'countBall' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]