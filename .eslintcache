[{"E:\\Game\\my-app\\src\\index.js":"1","E:\\Game\\my-app\\src\\App.js":"2","E:\\Game\\my-app\\src\\reportWebVitals.js":"3","E:\\Game\\my-app\\src\\Component\\Main.js":"4","E:\\Game\\my-app\\src\\Component\\CreateMatch.js":"5","E:\\Game\\my-app\\src\\Component\\Ball.js":"6","E:\\Game\\my-app\\src\\Component\\ScoreBoard.js":"7"},{"size":548,"mtime":1610424997488,"results":"8","hashOfConfig":"9"},{"size":638,"mtime":1610511007143,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":956,"mtime":1610426461179,"results":"12","hashOfConfig":"9"},{"size":7650,"mtime":1610511220496,"results":"13","hashOfConfig":"9"},{"size":5449,"mtime":1610600699854,"results":"14","hashOfConfig":"9"},{"size":17790,"mtime":1610701221328,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ffkocn",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Game\\my-app\\src\\index.js",[],["34","35"],"E:\\Game\\my-app\\src\\App.js",[],"E:\\Game\\my-app\\src\\reportWebVitals.js",[],"E:\\Game\\my-app\\src\\Component\\Main.js",["36"],"import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <>\r\n      <div className=\"col-md-8 mx-auto mt-2\">\r\n        <Card className=\"text-center\">\r\n          <Card.Header>Match Details</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {\" \"}\r\n              <Link to={\"/createMatch\"}>Create Match </Link>{\" \"}\r\n            </Card.Title>\r\n            <Card.Title>MatchId</Card.Title>\r\n            <Card.Title>Match Location</Card.Title>\r\n            <Card.Title>Match Name</Card.Title>\r\n            <Card.Title>Team Name1</Card.Title>\r\n            <Card.Title>Team Name2</Card.Title>\r\n            <Card.Title>Match Type</Card.Title>\r\n          </Card.Body>\r\n          <Card.Footer className=\"text-muted\"></Card.Footer>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","E:\\Game\\my-app\\src\\Component\\CreateMatch.js",["37"],"import React, { useEffect, useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport ScoreBoard from './ScoreBoard'\r\nimport { Link } from \"react-router-dom\";\r\nfunction CreateMatch(props) {\r\n  const [team_name1, setTeam] = useState(\"\");\r\n  const [team_name2, setTeam2] = useState(\"\");\r\n  const [list, setList] = useState([]);\r\n  const [photo, SetFileName] = useState(\"\");\r\n  const [team_id, setTeamId] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [player_name, setPlayerName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function getList() {\r\n      try {\r\n        let res = await axios.get(\r\n          `https://fast-atoll-73668.herokuapp.com/fetchTeam`\r\n        );\r\n        console.log(res.data.message);\r\n        let list = res.data.message;\r\n        setList(list);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    getList();\r\n  }, []);\r\n\r\n  function addTeam(team_name) {\r\n    try {\r\n      console.log(team_name);\r\n      fetch(`https://fast-atoll-73668.herokuapp.com/createTeam`, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          team_name,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n\r\n          console.log(data.details);\r\n          if (data.statusCode === 200) {\r\n            let data1 = {\r\n              _id: data.details._id,\r\n              team_name: data.details.team_name,\r\n            };\r\n            setList((preValue) => {\r\n              return [...preValue, data1];\r\n            });\r\n            alert(data.message);\r\n            setTeam(\"\");\r\n            setTeam2(\"\");\r\n          } else {\r\n            alert(data.message);\r\n          }\r\n          //console.log(data1)\r\n        })\r\n        .catch((e) => console.log(e));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    // console.log(team_name1)\r\n    addTeam(team_name1);\r\n  };\r\n  const handleSubmit2 = () => {\r\n    //  console.log(team_name2);\r\n    addTeam(team_name2);\r\n  };\r\n  //radio Button for choose team_id\r\n  const checkboxHandler = (e) => {\r\n    setTeamId(e.target.value);\r\n    //console.log(e.target.value);\r\n    // alert(e.target.value);\r\n  };\r\n  //selelct for role like batsman....\r\n  const selectHandler = (e) => {\r\n    setRole(e.target.value);\r\n    // alert(e.target.value);\r\n  };\r\n  //image handle\r\n  const formHandler = (e) => {\r\n    SetFileName(e.target.files[0]);\r\n    console.log(e.target.files[0]);\r\n  };\r\n  //submit player details\r\n  const submitPlayer = () => {\r\n    console.log(photo, role, team_id, player_name);\r\n    async function playerHandler() {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"photo\", photo);\r\n        formData.append(\"team_id\", team_id);\r\n        formData.append(\"player_name\", player_name);\r\n        formData.append(\"role\", role);\r\n\r\n        let result = await axios({\r\n          method: \"post\",\r\n          url: \"https://fast-atoll-73668.herokuapp.com/addPlayer\",\r\n          data: formData,\r\n          headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"content-type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n        console.log(result.data.message);\r\n        alert(result.data.message);\r\n      } catch (e) {\r\n        console.log(e);\r\n        if (e.response) {\r\n          console.log(e.response.data.message);\r\n          alert(e.response.data.message);\r\n        }\r\n      }\r\n    }\r\n    playerHandler();\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-6 mt-3 mx-auto\">\r\n     {/* // <ScoreBoard value={list}/> */}\r\n       <Link to={\"/scoreboard\"}>Go to the ScoreBoard </Link>\r\n      <Card className=\"text-center\">\r\n        <Card.Header className=\"bg-primary\">Create Team </Card.Header>\r\n        <Card.Body>\r\n          <Form>\r\n            <Form.Label>Enter Team Name 1</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Team Name 1\"\r\n              value={team_name1}\r\n              onChange={(e) => setTeam(e.target.value)}\r\n            />\r\n            <br />\r\n            <Button variant=\"primary\" onClick={() => handleSubmit()}>\r\n              Create Team\r\n            </Button>\r\n            <br />\r\n            <Form.Label className=\"mt-3\">Enter Team Name 2</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Team Name 2\"\r\n              value={team_name2}\r\n              onChange={(e) => setTeam2(e.target.value)}\r\n            />\r\n            <br />\r\n            <Button variant=\"primary\" onClick={() => handleSubmit2()}>\r\n              Create Team\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      {/* Team Name Fetch from Api */}\r\n\r\n      <div className=\"m-3\">\r\n        <h5>Your Team is</h5>\r\n        <Form.Group>\r\n          <Form.Control\r\n            as=\"select\"\r\n            //   onChange={selectHandler}\r\n          >\r\n            {\" \"}\r\n            <option>Team Name</option>\r\n            {list.map((element, index) => (\r\n              <option key={index} value={element.team_name} name={element._id}>\r\n                {element.team_name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </div>\r\n      {/* Add a player for Team */}\r\n\r\n      <div className=\"mt-5\">\r\n        <Card className=\"text-center \">\r\n          <Card.Header className=\"bg-info\">Add Player </Card.Header>\r\n          <Card.Body>\r\n            <Form.Group controlId=\"formBasicCheckbox\">\r\n              <p>Select Team Name Add Player</p>\r\n              <div className=\"row\">\r\n                {list.map((element, index) => (\r\n                  <Form.Check\r\n                    key={index}\r\n                    type=\"radio\"\r\n                    aria-label=\"radio 1\"\r\n                    name=\"male\"\r\n                    inline\r\n                    label={element.team_name}\r\n                    // value={element.team_name}\r\n                    value={element._id}\r\n                    onChange={checkboxHandler}\r\n                  />\r\n                ))}\r\n\r\n                <br />\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <h5>Choose role</h5>\r\n\r\n              <Form.Control as=\"select\" onChange={selectHandler}>\r\n                {\" \"}\r\n                <option value=\"\">Choose Role...</option>\r\n                <option value=\"Batsman\">Batsman</option>\r\n                <option value=\"Bowler\">Bowler</option>\r\n                <option value=\"Allrounder\">Allrounder</option>\r\n              </Form.Control>\r\n\r\n              <Form.Label>Add Player </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Player Name\"\r\n                onChange={(e) => setPlayerName(e.target.value)}\r\n              />\r\n              <br />\r\n              <Form.Group>\r\n                <Form.File\r\n                  className=\"position-relative\"\r\n                  required\r\n                  name=\"file\"\r\n                  onChange={formHandler}\r\n                  label=\"add a pic\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" onClick={() => submitPlayer()}>\r\n                Add Player\r\n              </Button>\r\n            </Form.Group>\r\n          </Card.Body>\r\n          <Card.Footer className=\"text-muted\"></Card.Footer>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateMatch;\r\n","E:\\Game\\my-app\\src\\Component\\Ball.js",["38"],"import React, { useState } from \"react\";\r\n//import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nconst Ball = () => {\r\n  let [score, setScore] = useState(0);\r\n  let [ball, setBall] = useState(6);\r\n  let [lastClicked, setLastClicked] = useState([]);\r\n\r\n  const clickHandler = (e) => {\r\n    if (ball === 0) {\r\n      alert(\"Over is ended\");\r\n      return;\r\n    }\r\n    ball--;\r\n    let value = parseInt(e.target.value);\r\n    //setLastClicked(value)\r\n    setScore(score + value);\r\n    setBall(ball);\r\n    setLastClicked((preValue) => {\r\n      return [...preValue, value];\r\n    });\r\n    //console.log(ball)\r\n  };\r\n  const redoHandler = (e) => {};\r\n  const undoHandler = () => {\r\n    let countBall = parseInt(ball);\r\n    let getScore = parseInt(score);\r\n    //console.log(countBall,getScore,lastClicked)\r\n    //setBall(parseInt(countBall) + 1);\r\n    //setScore(getScore-lastClicked.pop() );\r\n    console.log(lastClicked);\r\n    //console.log(lastClicked.pop());\r\n    let lastValue = lastClicked.pop();\r\n    console.log(lastValue);\r\n    setScore(getScore - lastValue);\r\n    //console.log(countBall,getScore,lastClicked)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-md-5 mt-3 mx-auto\">\r\n        <div className=\"input-group mb-3\">\r\n          <input type=\"text\" className=\"form-control\" value={score} readOnly />\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">BallLeft</span>\r\n            <span className=\"input-group-text\">{ball}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"table\">\r\n          <tbody>\r\n            <tr></tr>\r\n            <tr>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info p-2\"\r\n                  value=\"1\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  1\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info\"\r\n                  value=\"2\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  2\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info\"\r\n                  value=\"3\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  3\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success\"\r\n                  value=\"4\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  4\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  value=\"6\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  6\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  value=\"\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  out\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info\"\r\n                  value=\"1\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  wide\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info\"\r\n                  value=\"1\"\r\n                  onClick={(e) => {\r\n                    clickHandler(e);\r\n                  }}\r\n                >\r\n                  no ball\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info\"\r\n                  value=\"\"\r\n                  onClick={(e) => {\r\n                    redoHandler(e);\r\n                  }}\r\n                >\r\n                  Redo\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info\"\r\n                  value=\"\"\r\n                  onClick={() => {\r\n                    undoHandler();\r\n                  }}\r\n                >\r\n                  Undo\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            {ball ? null :\r\n              <tr className=\"text-center\">\r\n                <td>\r\n                  <button type=\"button\" className=\"btn btn-info\" value=\"\">\r\n                    Submit\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Ball;\r\n","E:\\Game\\my-app\\src\\Component\\ScoreBoard.js",["39","40","41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":14},{"ruleId":"47","severity":1,"message":"51","line":6,"column":8,"nodeType":"49","messageId":"50","endLine":6,"endColumn":18},{"ruleId":"47","severity":1,"message":"52","line":27,"column":9,"nodeType":"49","messageId":"50","endLine":27,"endColumn":18},{"ruleId":"47","severity":1,"message":"53","line":5,"column":10,"nodeType":"49","messageId":"50","endLine":5,"endColumn":14},{"ruleId":"47","severity":1,"message":"54","line":14,"column":10,"nodeType":"49","messageId":"50","endLine":14,"endColumn":15},{"ruleId":"47","severity":1,"message":"55","line":14,"column":17,"nodeType":"49","messageId":"50","endLine":14,"endColumn":25},{"ruleId":"47","severity":1,"message":"52","line":286,"column":9,"nodeType":"49","messageId":"50","endLine":286,"endColumn":18},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'ScoreBoard' is defined but never used.","'countBall' is assigned a value but never used.","'list' is assigned a value but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]